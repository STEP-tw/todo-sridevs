Todoster:
  Build a web application that helps a person maintain to-do list(s).

Features:
  ✔ Log in to their account @done(2018-01-13 16:01) @project(Features)
  ✔ Add one or more to-do list(s) @done(2018-01-17 16:29) @project(Features)
  ✔ View their to-do list @done(2018-01-17 14:04) @project(Features)
  ☐ Edit a to-do list
  ☐ Delete a to-do list
  ☐ Add one or more to-do items to each to-do list
  ☐ Mark any to-do item as done
  ☐ Mark any to-do item as not done
  ☐ Edit a to-do item
  ☐ Delete a to-do item
  ✔ Log out of their account @done(2018-01-13 16:01) @project(Features)

Static Todo:
  ✔ Bring in webapp framework. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ start listening to client with server. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ Bring in testing framework. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ start testing with a 404. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ write test for a login page. @done(2018-01-12 15:16) @project(Action Steps)
  ✔ construct a login page. @done(2018-01-12 15:59) @project(Action Steps)
  ✔ write test for homepage*/*/ @done(2018-01-12 18:10) @project(Action Steps)
  ✔ load homePage after succesfull login @done(2018-01-12 18:10) @project(Action Steps)
  ✔ write test for view task feature and construct the same feature. @done(2018-01-13 12:33) @project(Action Steps)
  ☐ test and run add todo feature.
  ☐ test and run edit todo feature.
  ☐ '' '' '' delete '' ''.
  ☐ display each todo individually upon click.
  ☐ add tasks to each todo individually.
  ☐ introduce marks done and not done feature.
  ☐ introduce edit each task feature.
  ☐ add delete task feature.
  ☐ add logout option from each page.

  Challenges:
  ✔ Failing test cases. @done(2018-01-15 14:33) @project(Static Todo)
  ✔ adding tasks dynamically and storing them. @done(2018-01-17 17:52) @project(Static Todo)
  ☐ displaying indiviually items and displaying them dynamically.
  ☐ creating new space for each added todo and updating it.

  Dynamic Todo:
    ✔ make a class todo which holds owner/user, title ,description and status. @done(2018-01-15 14:49) @project(Static Todo / Dynamic Todo)
    ✔ additionaly the todo class should hold tasks. @done(2018-01-15 19:23) @project(Static Todo / Dynamic Todo)
    ✔ todo should have edit, markdone, undone options. @done(2018-01-15 17:38) @project(Static Todo / Dynamic Todo)
    ✔ todo should have a delete method @done(2018-01-15 17:45) @project(Static Todo / Dynamic Todo)
    ✔ each task should have all those features. @done(2018-01-15 19:23) @project(Static Todo / Dynamic Todo)
    ✔ add a TodoBank class. @done(2018-01-16 15:03) @project(Static Todo / Dynamic Todo)
    ✔ add a method to take user input @done(2018-01-17 20:40) @project(Static Todo / Dynamic Todo)
