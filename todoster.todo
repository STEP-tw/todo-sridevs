Todoster:
  Build a web application that helps a person maintain to-do list(s).

Features:
  ☐ Log in to their account
  ☐ Add one or more to-do list(s)
  ☐ View their to-do list
  ☐ Edit a to-do list
  ☐ Delete a to-do list
  ☐ Add one or more to-do items to each to-do list
  ☐ Mark any to-do item as done
  ☐ Mark any to-do item as not done
  ☐ Edit a to-do item
  ☐ Delete a to-do item
  ☐ Log out of their account

Action Steps:
  ✔ Bring in webapp framework. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ start listening to client with server. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ Bring in testing framework. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ start testing with a 404. @done(2018-01-12 15:01) @project(Action Steps)
  ✔ write test for a login page. @done(2018-01-12 15:16) @project(Action Steps)
  ✔ construct a login page. @done(2018-01-12 15:59) @project(Action Steps)
  ✔ write test for homepage*/*/ @done(2018-01-12 18:10) @project(Action Steps)
  ✔ load homePage after succesfull login @done(2018-01-12 18:10) @project(Action Steps)
  ✔ write test for view task feature and construct the same feature. @done(2018-01-13 12:33) @project(Action Steps)
  ☐ test and run add todo feature.
  ☐ test and run edit todo feature.
  ☐ '' '' '' delete '' ''.
  ☐ display each todo individually upon click.
  ☐ add tasks to each todo individually.
  ☐ introduce marks done and not done feature.
  ☐ introduce edit each task feature.
  ☐ add delete task feature.
  ☐ add logout option from each page.

  Challenges:
  ☐ Failing test cases.
  ☐ adding tasks dynamically and storing them.
  ☐ displaying indiviually items and displaying them dynamically.
  ☐ creating new space for each added todo and updating it.
